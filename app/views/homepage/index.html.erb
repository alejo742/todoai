<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <title>To-Do List with AI Integration</title>
</head>
<body>
    <main>
        <div class="main-homescreen">
            <section class="homescreen-header">
                <h1>My To-Do</h1>
            </section>

            <section class="main-section-container" id="homepage-container">
                <section class="main-section today-section">
                    <div class="main-card-header today-header">
                        <h2>Today</h2>
                        <span>March 4th</span>
                    </div>
    
                    <div class="today-tasks tasks-container">
                        <% @tasks.each do |task| %>
                            <% if task.due_date == nil || task.due_date.strftime("%Y-%m-%d") == Date.today.strftime("%Y-%m-%d") %>
                            <div class="task">
                                <div class="complete-round-checkbox">
                                    <div class="filling">
                                    <img crossorigin="anonymous" referrerpolicy="no-referrer" src="https://static.vecteezy.com/system/resources/thumbnails/021/815/666/small/single-icon-of-checklist-free-png.png" alt="">
                                    </div>
                                </div>
                                <div class="task-info">
                                    <div class="task-description">
                                    <h4><%= task.task_name %></h4>
                                    <% if task.task_start_hour.present? && task.task_end_hour.present? %>
                                        <span>
                                        <%= sprintf('%02d', task.task_start_hour.to_i) %>:<%= sprintf('%02d', task.task_start_minute.to_i) %> - <%= sprintf('%02d', task.task_end_hour.to_i) %>:<%= sprintf('%02d', task.task_end_minute.to_i) %>
                                        </span>
                                        
                                    <% elsif task.task_start_hour.present? %>
                                        <span>
                                        <%= sprintf('%02d', task.task_start_hour.to_i) %>:<%= sprintf('%02d', task.task_start_minute.to_i) %>
                                        </span>
                                    <% end %>
                                    </div>
                                    <div class="task-options">
                                    <span class="task-options-button material-symbols-outlined">
                                        more_vert
                                    </span>
                                    <div class="task-options-dropdown">
                                        <!--delete button-->
                                        <%= form_with(model: task, method: :delete, url: destroy_task_path(task), class: "task-option") do |form| %>
                                            <%= form.submit class: "delete-task-button overlay-option-button", value: "" do %>
                                            <% end %>
                                            <span class="material-symbols-outlined">delete</span>
                                            Delete Task
                                        <% end %>

                                        <!--edit button-->
                                        <form class="task-option" onsubmit="event.preventDefault();">
                                            <input type="submit" class="edit-task-button overlay-option-button" onclick="openEditForm(<%=task.id%>)" value="">
                                            <span class="material-symbols-outlined">edit</span>
                                            Edit Task
                                        </form>
                                    </div>
                                    </div>
                                </div>
                            </div>

                            <div class="edit-task-overlay<%=task.id.to_s%> main-overlay">
                                <div class="edit-task-popup main-popup">
                                    <span class="material-symbols-outlined close-popup close-edit-task<%=task.id.to_s%>">
                                        close
                                    </span>
                                    <h3>Edit Task</h3>
                                    <%= form_with(model: task, method: :put, url: update_task_path(task), class: "edit-task-form task-form") do |f| %>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_name, "Name", class: "required" %>
                                                <%= f.text_field :task_name, required: true %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder double">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_start_hour, class: "required" %>
                                                <%= f.number_field :task_start_hour, min: 0, max: 23, required: true %> <!-- Assuming 24-hour format -->
                                            </div>
                                            <span class="time-input-divider">:</span>
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_start_minute %>
                                                <%= f.number_field :task_start_minute, min: 0, max: 59 %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder double">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_end_hour, class: "required" %>
                                                <%= f.number_field :task_end_hour, min: 0, max: 23, required: true%>
                                            </div>
                                            <span class="time-input-divider">:</span>
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_end_minute %>
                                                <%= f.number_field :task_end_minute, min: 0, max: 59 %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :due_date, "Due for" %>
                                                <%= f.date_field :due_date, class: "date-field" %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_frequency, class: "required" %>
                                                <%= f.select :task_frequency, [['Never', 'never'], ['Everyday', 'everyday'], ['Weekdays', 'weekdays'], ['Weekends', 'weekends']], required: true %>
                                            </div>
                                        </div>
                                        <div id="edit-task-submit" class="actions submit-button">
                                            <%= f.submit "Edit task" %>
                                        </div>
                                    <% end %>
                                </div>
                            </div>
                            <% end %>
                        <% end %>
                    </div>

                    <div class="today-help-offer">
                        <button href="#">Need help? Try AI assistance</button>
                    </div>
                </section>
    
                <div class="main-section all-tasks-section">
                    <div class="back-header">
                        <h2>All Tasks</h2>
                        <span class="material-symbols-outlined all-tasks-button">
                            expand_more
                        </span>
                    </div>
                    <div class="all-tasks">
                        <% @tasks.each do |task| %>
                            <div class="task">
                                <div class="complete-round-checkbox">
                                    <div class="filling">
                                    <img crossorigin="anonymous" referrerpolicy="no-referrer" src="https://static.vecteezy.com/system/resources/thumbnails/021/815/666/small/single-icon-of-checklist-free-png.png" alt="">
                                    </div>
                                </div>
                                <div class="task-info">
                                    <div class="task-description">
                                    <h4><%= task.task_name %></h4>
                                    <% if task.task_start_hour.present? && task.task_end_hour.present? %>
                                        <span>
                                        <%= sprintf('%02d', task.task_start_hour.to_i) %>:<%= sprintf('%02d', task.task_start_minute.to_i) %> - <%= sprintf('%02d', task.task_end_hour.to_i) %>:<%= sprintf('%02d', task.task_end_minute.to_i) %>
                                        </span>
                                        
                                    <% elsif task.task_start_hour.present? %>
                                        <span>
                                        <%= sprintf('%02d', task.task_start_hour.to_i) %>:<%= sprintf('%02d', task.task_start_minute.to_i) %>
                                        </span>
                                    <% end %>
                                    </div>
                                    <div class="task-options">
                                    <span class="task-options-button material-symbols-outlined">
                                        more_vert
                                    </span>
                                    <div class="task-options-dropdown">
                                        <!--delete button-->
                                        <%= form_with(model: task, method: :delete, url: destroy_task_path(task), class: "task-option") do |form| %>
                                            <%= form.submit class: "delete-task-button overlay-option-button", value: "" do %>
                                            <% end %>
                                            <span class="material-symbols-outlined">delete</span>
                                            Delete Task
                                        <% end %>

                                        <!--edit button-->
                                        <form class="task-option" onsubmit="event.preventDefault();">
                                            <input type="submit" class="edit-task-button overlay-option-button" onclick="openEditForm(<%=task.id%>)" value="">
                                            <span class="material-symbols-outlined">edit</span>
                                            Edit Task
                                        </form>
                                    </div>
                                    </div>
                                </div>
                            </div>

                            <div class="edit-task-overlay<%=task.id.to_s%> main-overlay">
                                <div class="edit-task-popup main-popup">
                                    <span class="material-symbols-outlined close-popup close-edit-task<%=task.id.to_s%>">
                                        close
                                    </span>
                                    <h3>Edit Task</h3>
                                    <%= form_with(model: task, method: :put, url: update_task_path(task), class: "edit-task-form task-form") do |f| %>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_name, "Name", class: "required" %>
                                                <%= f.text_field :task_name, required: true %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder double">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_start_hour, class: "required" %>
                                                <%= f.number_field :task_start_hour, min: 0, max: 23, required: true %> <!-- Assuming 24-hour format -->
                                            </div>
                                            <span class="time-input-divider">:</span>
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_start_minute %>
                                                <%= f.number_field :task_start_minute, min: 0, max: 59 %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder double">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_end_hour, class: "required" %>
                                                <%= f.number_field :task_end_hour, min: 0, max: 23, required: true%>
                                            </div>
                                            <span class="time-input-divider">:</span>
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_end_minute %>
                                                <%= f.number_field :task_end_minute, min: 0, max: 59 %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :due_date, "Due for" %>
                                                <%= f.date_field :due_date, class: "date-field" %>
                                            </div>
                                        </div>
                                        <div class="edit-task-field-holder task-field-holder">
                                            <div class="edit-task-field task-field">
                                                <%= f.label :task_frequency, class: "required" %>
                                                <%= f.select :task_frequency, [['Never', 'never'], ['Everyday', 'everyday'], ['Weekdays', 'weekdays'], ['Weekends', 'weekends']], required: true %>
                                            </div>
                                        </div>
                                        <div id="edit-task-submit" class="actions submit-button">
                                            <%= f.submit "Edit task" %>
                                        </div>
                                    <% end %>
                                </div>
                            </div>
                        <% end %>
                    </div>
                </div>

                <section class="main-section calendar-section">
                    <div class="main-card-header calendar-header">
                        <h2>Calendar</h2>
                    </div>
    
                    <div class="calendar-container">
                        <div class="calendar-month">
                            <button id="calendar-month-previous" class="calendar-button forbidden">
                                <span class="material-symbols-outlined">
                                    arrow_back_ios_new
                                </span>
                            </button>
                            
                            <div id="calendar-month-current" class="calendar-month-current">
                                <span></span>
                            </div>
    
                            <button id="calendar-month-next"  class="calendar-button">
                                <span class="material-symbols-outlined">
                                    arrow_forward_ios
                                </span>
                            </button>
                        </div>
                        <div class="main-calendar" id="main-calendar">
                            <div class="calendar-weekdays">
                                <span class="calendar-weekday">Sun</span>
                                <span class="calendar-weekday">Mon</span>
                                <span class="calendar-weekday">Tue</span>
                                <span class="calendar-weekday">Wed</span>
                                <span class="calendar-weekday">Thu</span>
                                <span class="calendar-weekday">Fri</span>
                                <span class="calendar-weekday">Sat</span>
                            </div>
                            <div id="calendar-days" class="calendar-days">
                            </div>
                        </div>
                    </div>

                    <div class="calendar-day-tasks"></div>
                </section>
            </section>

            <div class="floating-add-button">
                <button>Add To Do</button>
            </div>
        </div>

        <div class="add-task-overlay main-overlay">
            <div class="add-task-popup main-popup">
                <span class="material-symbols-outlined close-popup close-add-task">
                    close
                </span>
                <h3>Add Task</h3>
                <%= form_for(@task, url: { action: "create"}, html: { class: "add-task-form task-form" }) do |f| %>
                    <div class="add-task-field-holder task-field-holder">
                        <div class="add-task-field task-field">
                            <%= f.label :task_name, "Name", class: "required" %>
                            <%= f.text_field :task_name, required: true %>
                        </div>
                    </div>
                    <div class="add-task-field-holder task-field-holder double">
                        <div class="add-task-field task-field">
                            <%= f.label :task_start_hour %>
                            <%= f.number_field :task_start_hour, min: 0, max: 23 %>
                        </div>
                        <span class="time-input-divider">:</span>
                        <div class="add-task-field task-field">
                            <%= f.label :task_start_minute %>
                            <%= f.number_field :task_start_minute, min: 0, max: 59 %>
                        </div>
                    </div>
                    <div class="add-task-field-holder task-field-holder double">
                        <div class="add-task-field task-field">
                            <%= f.label :task_end_hour %>
                            <%= f.number_field :task_end_hour, min: 0, max: 23 %>
                        </div>
                        <span class="time-input-divider">:</span>
                        <div class="add-task-field task-field">
                            <%= f.label :task_end_minute %>
                            <%= f.number_field :task_end_minute, min: 0, max: 59 %>
                        </div>
                    </div>
                    <div class="add-task-field-holder task-field-holder">
                        <div class="add-task-field task-field">
                            <%= f.label :due_date, "Due for" %>
                            <%= f.date_field :due_date, class: "date-field" %>
                        </div>
                    </div>
                    <div class="add-task-field-holder task-field-holder">
                        <div class="add-task-field task-field">
                            <%= f.label :task_frequency %>
                            <%= f.select :task_frequency, [['Never', 'never'], ['Everyday', 'everyday'], ['Weekdays', 'weekdays'], ['Weekends', 'weekends']] %>
                        </div>
                    </div>
                    <div id="add-task-submit" class="actions submit-button">
                        <%= f.submit "Create task" %>
                    </div>
                <% end %>
            </div>
        </div>

        <div class="ai-assist-overlay main-overlay">
            <div class="ai-assist-popup main-popup">
                <span class="material-symbols-outlined close-popup close-ai">
                    close
                </span>
                <h3>Boost your productivity with <strong>AI.</strong> Prepare your day.</h3>
                <div class="ai-description">
                    <span class="material-symbols-outlined close-ai">
                        fact_check
                    </span>
                    <p>Let the AI organize your activities and suggest courses of action, with just a few clicks.</p>
                </div>
            </div>
        </div>
    </main>

    <!--all the js code-->
    <script>
        function taskChecking() {
            //visual effects for checking tasks as complete
            const taskCheckboxes = document.querySelectorAll('.complete-round-checkbox');
            const tasksContainer = document.querySelector('.today-tasks');

            taskCheckboxes.forEach(currentCheckbox => {
                let taskWidget = currentCheckbox.parentNode
                currentCheckbox.addEventListener('click', () => {
                    currentCheckbox.classList.toggle('checked')
                })
            })
        }
        taskChecking()


        function mainVisuals() {
            const taskOptionsButtons = document.querySelectorAll('.task-options-button');
            const taskOptionsDropdowns = document.querySelectorAll('.task-options-dropdown');

            taskOptionsButtons.forEach(button => {
                button.addEventListener('click', () => {
                    button.parentNode.children[1].classList.toggle('visible')
                })
            })
            taskOptionsDropdowns.forEach(dropdown => {
                dropdown.addEventListener('click', () => {
                    dropdown.classList.remove('visible')
                })
            })

            //making the padding of main section reactive
            const appHeader = document.querySelector('.homescreen-header');
            let headerHeight = appHeader.offsetHeight

            const footerButton = document.querySelector('.floating-add-button');
            let footerButtonHeight = footerButton.offsetHeight

            const mainContainers = document.querySelectorAll('.main-section-container');
            mainContainers.forEach(mainContainer => {
                mainContainer.style.paddingTop = `calc(${headerHeight}px + 3vh)`
                mainContainer.style.paddingBottom = `calc(${footerButtonHeight}px + 3vh)`
            })
            

            const todayTask = document.querySelector('.today-tasks .task')
            const todayTasksContainer = document.querySelector('.today-tasks')
            const helpOffer = document.querySelector('.today-help-offer')
            if(!todayTask)  {
                todayTasksContainer.innerHTML = '<h5 class="nothing-heading">All done for today!</h5>'
                helpOffer.style.display = "none"
            }
            const allTask = document.querySelector('.all-tasks .task')
            const allTasks = document.querySelector('.all-tasks')
            if(!allTask)  {
                allTasks.innerHTML = '<h5 class="nothing-heading">You do not have any tasks!</h5>'
            }

            const allTasksButton = document.querySelector('.all-tasks-button')
            allTasksButton.addEventListener('click', () => {
                allTasks.classList.toggle('active')
                allTasksButton.classList.toggle('active')
            })
        }
        mainVisuals()


        function taskAdding() {
            const addTaskButton = document.querySelector('.floating-add-button button');
            const addTaskOverlay = document.querySelector('.add-task-overlay');

            addTaskButton.addEventListener('click', () => {
                addTaskOverlay.classList.add('visible')
            })

            const closeAddPopup = document.querySelector('.close-add-task');
            const addTaskForm = document.querySelector('.add-task-form');

            closeAddPopup.addEventListener('click', () => {
                addTaskOverlay.classList.remove('visible')
                addTaskForm.reset()
            })
        }
        taskAdding()

        function openEditForm(taskId) {
            document.querySelector(`.edit-task-overlay${taskId}`).classList.add('visible');

            const closeBtn = document.querySelector(`.close-edit-task${taskId}`)
            closeBtn.addEventListener('click', () => {
                    closeBtn.parentNode.parentNode.classList.remove('visible')
            })

        }

        function calendarRendering() {
            const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

            const calendarDays = document.getElementById('calendar-days');
            const previousMonthButton = document.getElementById('calendar-month-previous')
            const nextMonthButton = document.getElementById('calendar-month-next');
            const visualMonth = document.querySelector('#calendar-month-current > span');


            let currentDate = new Date()
            let currentMonth = currentDate.getMonth()
            let currentYear = currentDate.getFullYear()
            let minMonth = new Date().getMonth()
            let minYear = new Date().getFullYear()
            let maxMonth = new Date().getMonth()
            let maxYear = new Date().getFullYear()+1

            function setCurrentDate() {
                var dateNumber = currentDate.getDate()
                var dateMonth = months[currentDate.getMonth()]
                var dateSuffix = ""

                function checkIfDateException(argDate) {
                    if(argDate >= 11 && argDate <= 13) {
                        return true
                    }
                    return false
                }

                switch (dateNumber.toString()[dateNumber.toString().length - 1]) {
                    case "1":
                        if(checkIfDateException(dateNumber)) {
                            dateSuffix = "th"
                        }
                        else {
                            dateSuffix = "st"
                        }
                        break;

                    case "2":
                        if(checkIfDateException(dateNumber)) {
                            dateSuffix = "th"
                        }
                        else {
                            dateSuffix = "nd"
                        }

                        break;

                    case "3":
                        if(checkIfDateException(dateNumber)) {
                            dateSuffix = "th"
                        }
                        else {
                            dateSuffix = "rd"
                        }

                        break;

                    default:
                        dateSuffix = "th"
                        break;
                }

                const dateHeader = document.querySelector('.today-header span');
                dateHeader.innerHTML = `${dateMonth} ${dateNumber}${dateSuffix}`
            }
            setCurrentDate()

            function renderCalendarDays() {

                currentDate.setDate(1)
                let firstDay = new Date(currentYear, currentMonth, 1);
                let lastDay = new Date (currentYear, currentMonth + 1, 0)
                let lastDayDate = lastDay.getDate()
                let lastDayIndex = lastDay.getDay()
                let previousLastDay = new Date(currentYear, currentMonth, 0);
                let previousLastDayDate = previousLastDay.getDate()
                const nextDays = 7 - lastDayIndex -1;

                visualMonth.innerHTML = `${months[currentMonth]} ${currentYear}`

                let days = ""

                for(let i = firstDay.getDay(); i > 0; i--) {
                    days += `<span class="calendar-day last-month past">${previousLastDayDate - i + 1}</span>`
                }

                for(let i = 1; i <= lastDayDate; i++) {
                    if(i === new Date().getDate() && 
                    currentMonth === new Date().getMonth() &&
                    currentYear === new Date().getFullYear()) {
                        days += `<span class="calendar-day current">${i}</span>`
                    }
                    else {
                        days += `<span class="calendar-day">${i}</span>`
                    }
                }

                for(let i = 1; i <= nextDays; i++) {
                    days += `<span class="calendar-day next-month">${i}</span>`
                }

                calendarDays.innerHTML = days


                //selecting the days and clickability after rendering
                var allCalendarDays = document.querySelectorAll('.calendar-day')
                allCalendarDays.forEach(day => {
                    day.addEventListener('click', () => {
                        if(day.classList.contains('current') || day.classList.contains('last-month') || day.classList.contains('next-month')) {
                            return
                        }
                        else {
                            if(document.querySelector('.calendar-day.current')) {
                                document.querySelector('.calendar-day.current').classList.remove('current')
                            }
                            day.classList.add('current')
                        }
                    })
                }) 
            }

            renderCalendarDays();

            nextMonthButton.addEventListener('click', () => {
                previousMonthButton.classList.remove('forbidden')
                if(currentYear < maxYear || currentMonth < maxMonth) {
                    currentMonth ++
                    if(currentMonth > 11) {
                        currentMonth = 0
                        currentYear++
                    }
                    renderCalendarDays()
                }
                if(currentYear == maxYear && currentMonth == maxMonth) {
                    nextMonthButton.classList.add('forbidden')
                }
            })

            previousMonthButton.addEventListener('click', () => {
                nextMonthButton.classList.remove('forbidden')
                if(currentYear > minYear || currentMonth > minMonth) {
                    currentMonth --
                    if(currentMonth < 0) {
                        currentMonth = 11
                        currentYear--
                    }
                    renderCalendarDays()
                }
                if(currentYear == minYear && currentMonth == minMonth) {
                    previousMonthButton.classList.add('forbidden')
                }
            })
        }
        calendarRendering()


        function aiAssistance() {
            const aiButton = document.querySelector('.today-help-offer button');
            const aiOverlay = document.querySelector('.ai-assist-overlay');

            aiButton.addEventListener('click', () => {
                aiOverlay.classList.add('visible')
            })

            const closeAiPopup = document.querySelector('.close-ai');
            closeAiPopup.addEventListener('click', () => {
                aiOverlay.classList.remove('visible')
            })
        }
        aiAssistance()
    </script>
</body>
</html>